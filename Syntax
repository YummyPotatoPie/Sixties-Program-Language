Ситнаксис языка

VAR [ID_NAME] = [VALUE] Инициализация переменной
Если [VALUE] - дробное число, то вводить дробную часть нужно через точку .
Пример:
VAR PI = 3.14

[ID_NAME1] <OP> ([ID_NAME2]|[VALUE]) Операции над переменными
[ID_NAME1] и [ID_NAME2] - заранее инициализированные переменные
<OP> - оператор (=, +=, -=, *=, /=, %=)
[VALUE] - любое числовое значение
Пример:
VAR F1 = 45
VAR F2 = 67
F1 *= F2
F2 += 2
F2 = F1

OUTPUT [ID_NAME] вывод значение [ID_NAME]
[ID_NAME] должен быть заранее инициализирован
Пример:
VAR N = 6
N *= 231231241
OUTPUT N

INPUT [ID_NAME] ввод значения [ID_NAME]
[ID_NAME] должен быть заранее инициализирован
Пример:
VAR M = 0
INPUT M

# Символ комментария
любой текст после этого символа игнорируется
ВАЖНО:
Комментарии можно оставлять только на новых строчках т.е.
#Example
VAR F = 1 
корректная запись , в то время как данная запись
VAR F = 1 #Example 
приведет к сбою программы, все из-за недальновидности разработчика

IF [ID_NAME] THEM (BREAK|CONTINUE) Условный оператор
[ID_NAME] заранее проинициализированная переменная
Выражение считается истиным если значение [ID_NAME] строго больше 0
Иначе выражение ложно
BREAK прекращает выполнение программы
CONTINUE продолжает выполнение программы
Пример:
VAR R = 0
INPUT R
IF R THEN BREAK
Если R > 0 то программа завершит работу, иначе продолжит

WHILE [ID_NAME] Цикл
  [STATEMENTS]
ENDWHILE
[ID_NAME] заранее проинициализированная переменная
Цикл будет работать до тех пор пока [ID_NAME] > 0
ENDWHILE сообщает о конце блока цикла
ВАЖНО:
Вложеные циклы приведут либо к сбою программы либо к непредсказуемой работе
Все из-за модели "оперативной памяти" для блоков цикла
